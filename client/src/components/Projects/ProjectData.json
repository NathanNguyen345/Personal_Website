{
  "ProjectData": [
    {
      "id": "5",
      "title": "Travel Time",
      "description": "Travel time is a personal travel blog website that I'm currently building from the ground up. I started designing the layout using Adobe XD. This will be a full-stack application using React, HTML, CSS, Express, MongoDB, and GSAP.  Each location sends the end-user to a different endpoint using React Router, which will then consume the API generated from Express querying data from the MongoDB to display information about each location. The end-user will have the ability to like, dislike, and comment on the picture, which will re-render the component with the latest information. The end-user, when logged in, will have access to a user control panel, which will show information about comments that others have liked or disliked. I also wanted to focus on a better understanding of the CSS flex and grid system to build responsive websites without having to rely on BootStrap.",
      "links": {
        "Github": "https://github.com/NathanNguyen345/Travel_Time"
      }
    },
    {
      "id": "4",
      "title": "Adobe Sign Dynamic Workflow",
      "description": "I developed this application because I found that there was a product gap between our product and our competitors. Dynamic workflows allow users to specify the next participants within an agreement by exposing internal workflows to external users. It replicates the workflow created in the workflow designer by creating a web form version. Both internal and external users can initiate an agreement using the selected workflow. This application allows the user to have a sense of dynamic recipient routing. Workflow creator can have the ability to hide all workflows with predefined recipients. Another option is to selectively target workflows and hide their predefined recipients. The workflow tool allows users to input CC recipients as well as hiding predefined CC recipients. This form allows the user to change the document name and messages to participating recipients. The users can upload supporting documents as well. Merge fields are also allowed to merge data from user input into the agreement for signatures. Users can also have the ability to set open passwords for their agreements. Users can set when an agreement needs to be completed within a 180 range. This application allows for 6 different types of reminder frequencies. This application was build using HTML, CSS, JavaScript, and Bootstrap. Later it was then converted to ReactJS. This project was made to be open-source, so our customers can simply clone the original and add additional functionality on top if needed.",
      "links": {
        "JavaScript Version": "https://github.com/NathanNguyen345/Dynamic_Workflow",
        "React Version": "https://github.com/NathanNguyen345/Dynamic_Workflow_React",
        "Live Demo": "https://NathanNguyen345.xyz"
      }
    },
    {
      "id": "3",
      "title": "Adobe Sign User Sync",
      "description": "Sign Sync allows for an automated process of moving users over from your Lightweight Directory Access Protocol (LDAP) into Adobe Sign. This application is design to work as one-way sync. It has been recently updated to work for LDAP, Azure AD, and Adobe Admin Console. It was designed in a way to allow for multiple connectors. If a new connection is needed, we simply just need to build out the authentication process for that connector and perform the needed queries. The main component of this application strips out the required data from our queries and structures them in a way that is acceptable to the Adobe Sign API. Tested with 20k users and synced within a matter of minutes. Throttling was put in place to prevent overloading the servers. YAML file controls all of the configurations for the enterprise, server, and connector settings. Current features include user creation, group creation, user privileges, user group synchronization, activate/deactivate accounts, and custom group mapping. Developed using Python and integrates with Adobe Sign API v5.  This project is an open-source project that allows our customer to clone the repo and used for their internal user syncronization.",
      "links": {
        "Github": "https://github.com/NathanNguyen345/Sign-Sync-Standalone"
      }
    },
    {
      "id": "2",
      "title": "San Francisco Crime Rate",
      "description": "The main purpose of this project is to be able to identify the major impacts that crimes have on the city of San Francisco. I analyzed which areas experience the most crimes and the reason behind it. I wanted to be able to see if crimes will have a significant impact on the housing market. My analysis will allow the Police Department to see when, where, and what type of crimes will most likely happen. With this information, they will be able to allocate the necessary units to the right areas throughout the day. Also, I will be able to bring awareness to residents and tourists by informing them of precautions to take depending on the area they're visiting. Lastly, the future residence will be able to see if there are any correlations between the crime rates and the current housing market to know if they're getting the right price.",
      "links": {
        "Github": "https://github.com/NathanNguyen345/SF_Crime_DS/blob/master/README.md"
      }
    },
    {
      "id": "1",
      "title": "Yelp Natural Language Processing",
      "description": "This project demonstrated how we can achieve sentimental analysis with a heavy dataset provided by Yelp dataset challenges. The file provides us with over 4 million reviews from different businesses all over the world. This analysis will be focusing on restaurant reviews. We want to be able to find correlations between restaurants and provide positive and negative sentiment on different types of foods provided by restaurants. The goal is to be able to understand what the reviews are telling us on a deeper level and provide recommendations depending on user input. Not only will we provide recommendations for restaurants, but we will also provide recommendations for similar dishes.",
      "links": {
        "Github": "https://github.com/NathanNguyen345/Yelp-NLP/blob/master/Yelp%20NLP.ipynb"
      }
    }
  ]
}
